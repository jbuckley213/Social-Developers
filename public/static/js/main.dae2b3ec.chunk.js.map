{"version":3,"sources":["lib/auth-service.js","lib/user-service.js","context/auth-context.js","components/Navbar.js","pages/Home.js","styles/login.js","pages/Signup.js","pages/Login.js","context/theme-context.js","lib/post-service.js","styles/themes.js","components/Posts/Post.js","styles/fade.js","pages/Private.js","lib/conversation-service.js","components/SeachResult/SearchResult.js","pages/Search.js","components/Notifications/Notifications.js","components/EditProfile/EditProfile.js","components/Settings/Settings.js","styles/profile-button.js","components/UserPost/UserPost.js","pages/Profile.js","components/Comment/Comment.js","pages/PostDetails.js","styles/message-preview.js","components/ConversationListItem/ConversationListItem.js","pages/ConversationList.js","styles/message-header.js","pages/ConversationDetails.js","components/AnonRoute.js","components/PrivateRoute.js","App.js","index.js"],"names":["socket","io","process","authService","this","auth","axios","create","baseURL","withCredentials","firstName","lastName","image","email","password","console","log","post","then","response","data","off","get","userService","getAll","api","getOne","id","follow","put","unfollow","deleteNotification","notificationId","seenNotification","editPhoto","darkView","darkMode","React","createContext","Consumer","Provider","AuthProvider","state","isLoggedIn","isLoading","user","isDark","signup","setState","catch","err","login","logout","me","toggleTheme","mode","apiResponse","value","props","children","Component","withAuth","WrappedComponent","newMessages","startSocket","conversations","forEach","conversation","emit","room","_id","error","on","message","getMessageNotification","notification","length","setNotificationsZero","className","activeClassName","to","onClick","Home","src","AuthStyle","styled","div","css","SignUpStyle","handleFormSubmit","event","preventDefault","handleChange","target","name","handleFileUpload","e","files","file","uploadData","FormData","append","secure_url","onSubmit","type","onChange","style","width","alt","class","postService","getAllPostsByFollowedUsers","getById","postId","createPost","postedBy","postContent","postPhoto","likePost","unlikePost","comment","commentContent","delete","deleteComment","commentId","Theme","dark","ThemeConversation","isliked","numberOfLikes","numberOfComments","showPhoto","countNumberOfLikes","likes","countNumberOfComments","comments","handleLike","isLiked","postLiked","postUnliked","outputDate","dateString","date","Date","day","toDateString","split","slice","join","toLocaleString","reverse","toggleShowPicture","likeId","fontSize","color","fadeIn","keyframes","Fade","users","posts","newPosts","handlePostsFollowedApi","orderPosts","postsArr","push","sort","a","b","handleInput","postWithSocket","handleSubmit","createdPost","window","scrollTo","placeholder","required","map","createConversation","userId","getConversations","getConversationOne","conversationId","sendMessage","messageContent","userSentToId","messageSeen","deleteMessage","messageId","isFollowing","hasConversation","checkFollow","currentUserFollowing","following","userSearchId","userSearch","checkConversation","currentUserConversations","includes","handleFollow","UserService","handleUnfollow","conversationService","searchResults","searchInput","handleSearchResults","filteredUsers","filter","lowercaseFirstName","toLowerCase","lowercaseLastName","lowercaseSearch","startsWith","autoComplete","notifications","filterNotifications","filteredNotifications","reduceNotifications","notificationInfo","userActivity","toggleNotifications","EditProfile","showEdit","isFollowed","showSettings","toggleEdit","followers","userFollowing","toggleSettings","ProfileButton","highlight","showDelete","toggleDelete","href","deletePost","isAdmin","showPosts","showLikes","showFollowing","postInput","showNotifications","numberOfNotifications","newNotification","handlePostApi","mount","profileId","match","params","displayPosts","setFollowing","componentDidUpdate","displayLikes","displayFollowing","userProfile","filteredFollowing","getNumberOfFollowers","created_at","onMouseEnter","Badge","badgeContent","max","UserPost","handleIsAdmin","createdById","createdBy","currentUserId","getPostDetails","commentInput","setLike","toggleLikes","handlePostById","showCommentInput","handlePostLinks","postContentWithLinkSplit","word","postContentWithLink","MessagePreview","unreadMessages","isOnline","checkOnline","onlineArr","online","receiverUserId","receiverUser","onlineUser","checkNotifications","messageArrLength","messages","userSent","updated_at","filterCurrentUser","userArr","userIdArr","Object","values","MessageHeader","intervalId","userContact","getConversation","seenMessage","sendDelete","getMessages","getConversationMount","sendObj","scrollToBottom","userContactId","filteredUserArr","setTimerFromApiCall","setInterval","checkSeen","notificationsArr","messagesArr","lastMessage","el","scrollIntoView","behavior","clearInterval","classes","ref","routeProps","ComponentToShow","component","exact","path","render","App","innerWidth","Signup","Login","Private","Search","Profile","PostDetails","ConversationList","ConversationDetails","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dae2b3ec.chunk.js","sourcesContent":["import axios from \"axios\";\nimport io from \"socket.io-client\";\n\n//const ENDPOINT = \"http://localhost:5000\";\nconst ENDPOINT = process.env.REACT_APP_API_URL;\nlet socket = io(ENDPOINT);\n\nclass AuthService {\n  constructor() {\n    this.auth = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true,\n    });\n  }\n\n  signup(firstName, lastName, image, email, password) {\n    console.log(firstName, lastName, image, email, password);\n\n    const pr = this.auth\n      .post(\"/auth/signup\", { firstName, lastName, image, email, password })\n      .then((response) => response.data);\n    // .then(({ data }) => data); // Shorter way of `.then((response) => response.data);`\n\n    return pr;\n  }\n\n  login(email, password) {\n    const pr = this.auth\n      .post(\"/auth/login\", { email, password })\n      .then((response) => response.data);\n\n    return pr;\n  }\n\n  logout() {\n    socket.off();\n\n    const pr = this.auth.get(\"/auth/logout\").then((response) => response.data);\n\n    return pr;\n  }\n\n  me() {\n    const pr = this.auth.get(\"/auth/me\").then((response) => response.data);\n\n    return pr;\n  }\n}\n\nconst authService = new AuthService();\n\nexport default authService;\n\n// Service is a set of methods abstracted and placed into a class, out of which we create one instance.\n// In the above case, all axios request calls are abstracted into methods.\n","import axios from \"axios\";\n\nclass UserService {\n  constructor() {\n    // this.api  is a reusable base of the request containing the base url (baseURL)\n    // of the API and the options ( `withCredentials: true` )\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true,\n    });\n  }\n\n  getAll = () => {\n    const pr = this.api.get(\"/api/users\");\n\n    return pr;\n  };\n\n  getOne = (id) => {\n    const pr = this.api.get(`/api/users/${id}`);\n    return pr;\n  };\n\n  follow = (id) => {\n    const pr = this.api.put(`/api/users/${id}/follow`);\n    return pr;\n  };\n\n  unfollow = (id) => {\n    const pr = this.api.put(`/api/users/${id}/unfollow`);\n    return pr;\n  };\n\n  deleteNotification = (notificationId) => {\n    const pr = this.api.put(`/api/users/notifications/${notificationId}`);\n    return pr;\n  };\n\n  seenNotification = () => {\n    const pr = this.api.get(\"/api/users/notifications/seen\");\n    return pr;\n  };\n\n  editPhoto = (image) => {\n    console.log(image);\n    const pr = this.api.post(\"/api/users/edit\", { image });\n    return pr;\n  };\n\n  darkView = (darkMode) => {\n    const pr = this.api.post(\"/api/users/dark-mode\", { darkMode });\n    return pr;\n  };\n}\n\nconst userService = new UserService();\n\nexport default userService;\n","import React from \"react\";\nimport authService from \"./../lib/auth-service\";\nimport userService from \"./../lib/user-service\";\n\nconst { Consumer, Provider } = React.createContext();\n\nclass AuthProvider extends React.Component {\n  state = {\n    isLoggedIn: false,\n    isLoading: true,\n    user: null,\n    isDark: false,\n  };\n\n  componentDidMount() {\n    authService\n      .me()\n      .then((user) =>\n        this.setState({\n          isLoggedIn: true,\n          user: user,\n          isLoading: false,\n          isDark: user.darkMode,\n        })\n      )\n      .catch((err) =>\n        this.setState({ isLoggedIn: false, user: null, isLoading: false })\n      );\n  }\n\n  signup = (firstName, lastName, image, email, password) => {\n    authService\n      .signup(firstName, lastName, image, email, password)\n      .then((user) => this.setState({ isLoggedIn: true, user }))\n      .catch((err) => {\n        this.setState({ isLoggedIn: false, user: null });\n      });\n  };\n\n  login = (email, password) => {\n    authService\n      .login(email, password)\n      .then((user) => this.setState({ isLoggedIn: true, user }))\n      .catch((err) => {\n        this.setState({ isLoggedIn: false, user: null });\n      });\n  };\n\n  logout = () => {\n    authService\n      .logout()\n      .then(() => this.setState({ isLoggedIn: false, user: null }))\n      .catch((err) => console.log(err));\n  };\n\n  me = () => {\n    console.log(\"me called\");\n    authService\n      .me()\n      .then((user) => {\n        this.setState({ user });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  toggleTheme = () => {\n    const isDark = this.state.isDark;\n    let mode = \"\";\n    if (isDark) {\n      mode = \"light\";\n    } else {\n      mode = \"dark\";\n    }\n\n    userService\n      .darkView(mode)\n      .then((apiResponse) => {\n        console.log(apiResponse);\n        this.setState({ isDark: !this.state.isDark });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    const { isDark, isLoggedIn, isLoading, user } = this.state;\n    const { toggleTheme, signup, login, logout, me } = this;\n\n    if (isLoading) return <p>Loading</p>;\n\n    return (\n      <Provider\n        value={{\n          isDark,\n          isLoggedIn,\n          isLoading,\n          user,\n          signup,\n          login,\n          logout,\n          me,\n          toggleTheme,\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n\n// HOC that converts regular component into a Consumer\nconst withAuth = (WrappedComponent) => {\n  return class extends React.Component {\n    render() {\n      return (\n        <Consumer>\n          {(value) => {\n            const {\n              isLoggedIn,\n              isDark,\n              isLoading,\n              user,\n              signup,\n              login,\n              logout,\n              me,\n              toggleTheme,\n            } = value;\n\n            return (\n              <WrappedComponent\n                {...this.props}\n                isDark={isDark}\n                isLoggedIn={isLoggedIn}\n                isLoading={isLoading}\n                user={user}\n                signup={signup}\n                login={login}\n                logout={logout}\n                me={me}\n                toggleTheme={toggleTheme}\n              />\n            );\n          }}\n        </Consumer>\n      );\n    }\n  };\n};\n\nexport { AuthProvider, withAuth };\n","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { withAuth } from \"./../context/auth-context\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport \"bulma/css/bulma.css\";\n\nimport io from \"socket.io-client\";\n\n//const ENDPOINT = \"http://localhost:5000\";\nconst ENDPOINT = process.env.REACT_APP_API_URL;\nlet socket = io(ENDPOINT);\n\nclass Navbar extends Component {\n  state = {\n    newMessages: 0,\n  };\n  componentDidMount() {\n    if (this.props.user) {\n      this.startSocket();\n    }\n  }\n\n  startSocket = () => {\n    const conversations = this.props.user.conversations;\n\n    conversations.forEach((conversation) => {\n      socket.emit(\n        \"join\",\n        { room: conversation._id, user: this.props.user._id },\n        (error) => {\n          if (error) {\n            console.log(error);\n          }\n        }\n      );\n\n      socket.on(\"message\", (message) => {\n        console.log(\"socket called\");\n        let newMessages = this.state.newMessages;\n        newMessages++;\n        this.setState({ newMessages });\n      });\n    });\n  };\n\n  getMessageNotification = () => {\n    const conversations = this.props.user.conversations;\n    const notification = this.state.newMessages / conversations.length;\n    console.log(notification);\n    return notification;\n  };\n  setNotificationsZero = () => {\n    this.setState({ newMessages: 0 });\n  };\n\n  render() {\n    // const { user, logout, isLoggedin } = this.props;\n    return (\n      <nav className=\"navbar\">\n        {this.props.isLoggedIn ? (\n          <>\n            <NavLink\n              className=\"btn \"\n              activeClassName=\"nav-link\"\n              to={\"/private\"}\n            >\n              <HomeIcon />\n            </NavLink>\n            <NavLink className=\"btn\" activeClassName=\"nav-link\" to=\"/search\">\n              <SearchIcon />\n            </NavLink>\n            <NavLink\n              className=\"btn\"\n              activeClassName=\"nav-link\"\n              to={`/profile/${this.props.user._id}`}\n            >\n              <PersonIcon />\n            </NavLink>\n            <NavLink\n              className=\"btn\"\n              activeClassName=\"nav-link\"\n              to={\"/conversations\"}\n              onClick={this.setNotificationsZero}\n            >\n              <ChatIcon />\n              {this.getMessageNotification() === 0\n                ? null\n                : this.getMessageNotification()}\n            </NavLink>\n          </>\n        ) : (\n          <>\n            <NavLink to=\"/login\">\n              <button\n                className=\"button btn nav-home-btn\"\n                activeClassName=\"nav-link\"\n              >\n                Login\n              </button>{\" \"}\n            </NavLink>\n            <br />\n            <NavLink to=\"/signup\">\n              <button\n                className=\"button nav-home-btn\"\n                activeClassName=\"nav-link\"\n              >\n                Sign Up\n              </button>{\" \"}\n            </NavLink>\n          </>\n        )}\n      </nav>\n    );\n  }\n}\n\nexport default withAuth(Navbar);\n","import React from \"react\";\n\nfunction Home() {\n  return (\n    <div>\n      <img src=\"/logo.png\" />\n      <section id=\"home\">\n        <p>\n          Love Code? Share your thoughts, explore new ideas and find others like\n          you!\n        </p>\n      </section>\n    </div>\n  );\n}\n\nexport default Home;\n","import styled, { css } from \"styled-components\";\n\nexport const AuthStyle = styled.div`\n  ${() =>\n    css`\n    width:100%;\n  background-color: #f2f2f2;\n  height: 100%;\n  form{\n      display:flex;\n      flex-direction:column;\n      align-items:center;\n      margin:20px 0\n  }\n  h1 {\n    text-align:center;\n    padding: 20px 0 10px 0;\n    font-size:2rem;\n    margin:0 auto;\n    width:80%;\n    border-bottom: 0.1rem solid  #3b945e;\n  }\n  button{\n      width:50%;\n      margin: 20px 0;\n  }\n  p{\n    margin: 0 auto;\n   text-align:center;\n  }\n  input {\n    margin: 20px auto;\n    width:70%;\n`}\n`;\n\nexport const SignUpStyle = styled.div`\n  ${() =>\n    css`\n    width:100%;\n  background-color: #f2f2f2;\n  height: auto;\n  padding-bottom:200px;\n  form{\n      display:flex;\n      flex-direction:column;\n      align-items:center;\n      margin:10px 0\n  }\n  h1 {\n    text-align:center;\n    padding: 20px 0 10px 0;\n    font-size:2rem;\n    margin:0 auto;\n    width:80%;\n    border-bottom: 0.1rem solid  #3b945e;\n  }\n  button{\n      width:50%;\n      margin: 20px auto;\n  }\n  p{\n    margin: 0 auto;\n   text-align:center;\n  }\n  div{\n    display:flex;\n    flex-direction:column;\n    align-items:center;\n  }\n  input {\n    margin: 5px auto;\n    width:70%;\n`}\n`;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { withAuth } from \"./../context/auth-context\";\nimport { SignUpStyle } from \"./../styles/login\";\n// import userService from \"./../lib/user-service\";\n\nclass Signup extends Component {\n  state = { firstName: \"\", lastName: \"\", image: \"\", email: \"\", password: \"\" };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const { firstName, lastName, image, email, password } = this.state;\n    this.props.signup(firstName, lastName, image, email, password);\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFileUpload = (e) => {\n    console.log(\"The file to be uploaded is: \", e.target.files);\n    const file = e.target.files[0];\n\n    const uploadData = new FormData();\n    // image => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new project in '/api/projects' POST route\n    uploadData.append(\"image\", file);\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/auth/upload`, uploadData, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(\"response is: \", response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n        this.setState({ image: response.data.secure_url });\n      })\n      .catch((err) => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  render() {\n    const { firstName, lastName, image, email, password } = this.state;\n    return (\n      <SignUpStyle>\n        <h1>Sign Up</h1>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Profile Pic</label>\n          <input\n            className=\"input is-primary\"\n            name=\"image\"\n            type=\"file\"\n            onChange={this.handleFileUpload}\n          ></input>\n          <span>\n            <img style={{ width: \"100px\" }} src={image && image} alt=\"\"></img>\n          </span>\n\n          <label>First Name:</label>\n          <input\n            className=\"input is-primary\"\n            type=\"text\"\n            name=\"firstName\"\n            value={firstName}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label>Last Name:</label>\n          <input\n            className=\"input is-primary\"\n            type=\"text\"\n            name=\"lastName\"\n            value={lastName}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label>Email:</label>\n          <input\n            className=\"input is-primary\"\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n          <br />\n          <label>Password:</label>\n          <input\n            className=\"input is-primary\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n\n          <button className=\"button is-primary is-white\" type=\"submit\">\n            {\" \"}\n            Signup{\" \"}\n          </button>\n        </form>\n\n        <div>\n          <p>Already have account?</p>\n          <button className=\"signup-btn button is-link is-light\">\n            <Link to={\"/login\"}> Login</Link>\n          </button>\n        </div>\n      </SignUpStyle>\n    );\n  }\n}\n\nexport default withAuth(Signup);\n\n// const EnhancedSignup = withAuth(Signup)\n// export default EnhancedSignup;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../context/auth-context\";\nimport { AuthStyle } from \"./../styles/login\";\n\nclass Login extends Component {\n  state = { email: \"\", password: \"\" };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    // Call funciton coming from AuthProvider ( via withAuth )\n    this.props.login(email, password);\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { email, password } = this.state;\n\n    return (\n      <AuthStyle>\n        <h1>Login</h1>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Email:</label>\n          <input\n            class=\"input is-primary\"\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n          />\n\n          <label>Password:</label>\n          <input\n            class=\"input is-primary\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n          />\n\n          <button className=\"button is-primary is-white\" type=\"submit\">\n            Login\n          </button>\n        </form>\n      </AuthStyle>\n    );\n  }\n}\n\nexport default withAuth(Login);\n","import React from \"react\";\n\nconst { Consumer, Provider } = React.createContext();\n\nclass ThemeProvider extends React.Component {\n  state = {\n    isDark: false,\n  };\n\n  toggleTheme = () => {\n    this.setState({ isDark: !this.state.isDark });\n  };\n\n  render() {\n    const { isDark } = this.state;\n    const { toggleTheme } = this;\n\n    console.log(isDark);\n\n    return (\n      <Provider value={{ isDark, toggleTheme }}>{this.props.children}</Provider>\n    );\n  }\n}\n\n// HOC that converts regular component into a Consumer\nconst withTheme = (WrappedComponent) => {\n  return class extends React.Component {\n    render() {\n      return (\n        <Consumer>\n          {(value) => {\n            console.log(value);\n            const { toggleTheme } = value;\n\n            return (\n              <WrappedComponent\n                {...this.props}\n                // isDark={isDark}\n                toggleTheme={toggleTheme}\n              />\n            );\n          }}\n        </Consumer>\n      );\n    }\n  };\n};\n\nexport { ThemeProvider, withTheme };\n","import axios from \"axios\";\n\nclass PostService {\n  constructor() {\n    // this.api  is a reusable base of the request containing the base url (baseURL)\n    // of the API and the options ( `withCredentials: true` )\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true,\n    });\n  }\n\n  getAllPostsByFollowedUsers = () => {\n    const pr = this.api.get(\"/api/posts\");\n\n    return pr;\n  };\n\n  getById = (postId) => {\n    const pr = this.api.get(`/api/posts/${postId}`);\n    return pr;\n  };\n\n  createPost = (postedBy, postContent, postPhoto) => {\n    console.log(postedBy, postContent, postPhoto);\n    const pr = this.api.post(\"/api/posts\", {\n      postedBy,\n      postContent,\n      postPhoto,\n    });\n    return pr;\n  };\n\n  likePost = (postId) => {\n    const pr = this.api.put(`/api/posts/${postId}/likes`);\n    return pr;\n  };\n  unlikePost = (postId) => {\n    const pr = this.api.put(`/api/posts/${postId}/unlikes`);\n    return pr;\n  };\n\n  comment = (postId, commentContent) => {\n    const pr = this.api.post(`/api/posts/${postId}/comment`, {\n      commentContent,\n    });\n    return pr;\n  };\n  delete = (postId) => {\n    const pr = this.api.delete(`/api/posts/${postId}/delete`);\n    return pr;\n  };\n\n  deleteComment = (postId, commentId) => {\n    const pr = this.api.delete(`/api/posts/${postId}/comment/${commentId}`);\n    return pr;\n  };\n}\n\nconst postService = new PostService();\n\nexport default postService;\n","import styled, { css } from \"styled-components\";\n\nexport const Theme = styled.div`\n  ${(props) =>\n    props.dark &&\n    css`\n    width:100%;\n  background-color: rgb(68, 68, 68);\n  height:100%;\n  \n  h1 {\n    color: palevioletred;\n  }\n  div{\n    background-color:rgb(100, 100, 100);\n    color: white;\n  }\n  p {\n    color: white;\n`}\n`;\n\nexport const ThemeConversation = styled.div`\n  ${(props) =>\n    props.dark &&\n    css`\n    width:100%;\n  background-color: rgb(68, 68, 68);\n  height:auto;\n  \n  h1 {\n    color: palevioletred;\n  }\n  .post-main{\n    background-color:rgb(80, 80, 80);\n    color: white;\n  } \n  .admin-message p{\n    color:white;\n  }\n  p {\n    color: palevioletred;\n`}\n`;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../../context/auth-context\";\nimport postService from \"./../../lib/post-service\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"./../../styles/themes\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\n\nimport \"./Post.css\";\nimport \"bulma/css/bulma.css\";\n\nclass Post extends Component {\n  state = {\n    isliked: false,\n    numberOfLikes: 0,\n    numberOfComments: 0,\n    showPhoto: false,\n  };\n\n  countNumberOfLikes = () => {\n    let numberOfLikes = this.props.post.likes.length;\n    this.setState({ numberOfLikes });\n  };\n\n  countNumberOfComments = () => {\n    let numberOfComments = this.props.post.comments.length;\n    this.setState({ numberOfComments });\n  };\n\n  handleLike = () => {\n    if (!this.state.isLiked) {\n      postService\n        .likePost(this.props.post._id)\n        .then((postLiked) => {\n          console.log(postLiked);\n          let numberOfLikes = this.state.numberOfLikes;\n          numberOfLikes++;\n          this.setState({ numberOfLikes: numberOfLikes });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    if (this.state.isLiked) {\n      postService\n        .unlikePost(this.props.post._id)\n        .then((postUnliked) => {\n          let numberOfLikes = this.state.numberOfLikes;\n          numberOfLikes--;\n          console.log(numberOfLikes);\n          this.setState({ numberOfLikes: numberOfLikes });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    this.setState({ isLiked: !this.state.isLiked });\n  };\n\n  // handleLike = () => {\n  //   if (!this.state.isLiked) {\n  //     let numberOfLikes = this.state.numberOfLikes;\n  //     numberOfLikes++;\n  //     this.setState({ numberOfLikes: numberOfLikes });\n  //   }\n  //   if (this.state.isLiked) {\n  //     let numberOfLikes = this.state.numberOfLikes;\n  //     numberOfLikes--;\n  //     this.setState({ numberOfLikes: numberOfLikes });\n  //   }\n  //   this.setState({ isLiked: !this.state.isLiked });\n  // };\n\n  outputDate = (dateString) => {\n    const date = new Date(dateString);\n    const day = date.toDateString().split(\" \").slice(0, 3).join(\" \");\n\n    const time = date.toLocaleString().split(\" \").reverse()[0].slice(0, 5);\n    return time + \" \" + day;\n  };\n\n  componentDidMount() {\n    let isLiked = false;\n    if (this.props.post) {\n      this.props.post.likes.forEach((likeId) => {\n        if (likeId === this.props.user._id) {\n          isLiked = true;\n        }\n      });\n    }\n    this.setState({ isLiked: isLiked });\n    this.countNumberOfLikes();\n    this.countNumberOfComments();\n  }\n\n  toggleShowPicture = () => {\n    this.setState({ showPhoto: !this.state.showPhoto });\n  };\n\n  // handlePostLinks = () => {\n  //   const postContent = this.props.post.postContent.split(\" \");\n  //   console.log(postContent);\n\n  //   const postContentWithLinkSplit = postContent.map((word) => {\n  //     if (word.startsWith(\"http\") || word.startsWith(\"https\")) {\n  //       return \"<a href={`${word}`}>{word}</a>\";\n  //     } else {\n  //       return word;\n  //     }\n  //   });\n  //   console.log(postContentWithLinkSplit);\n\n  //   const postContentWithLink = postContentWithLinkSplit.join(\" \");\n\n  //   console.log(postContentWithLink);\n\n  //   return <p>{postContentWithLink}</p>;\n  // };\n\n  // componentWillUnmount() {\n  //   if (!this.state.isLiked) {\n  //     postService\n  //       .likePost(this.props.post._id)\n  //       .then((postLiked) => {\n  //         console.log(\"Post liked\");\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   }\n  //   if (this.state.isLiked) {\n  //     postService\n  //       .unlikePost(this.props.post._id)\n  //       .then((postUnliked) => {\n  //         console.log(\"Post unliked\");\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   }\n  // }\n  render() {\n    const { post } = this.props;\n    let classes = \"\";\n    if (this.state.isLiked) {\n      classes = \"liked\";\n    }\n    return (\n      <div>\n        {/* <div className=\"card\"> */}\n        <Theme dark={this.props.isDark}>\n          {/* <header className=\"card-header\">\n              <img src={post.postedBy.image} alt=\"user profile\" />\n              <p className=\"card-header-title\">\n                {post.postedBy && post.postedBy.firstName}{\" \"}\n                {post.postedBy && post.postedBy.lastName}\n              </p>\n              <p\n                href=\"#\"\n                className=\"card-header-icon\"\n                aria-label=\"more options\"\n              >\n                <span className=\"icon\">\n                  <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n                </span>\n              </p>\n            </header> */}\n          {/* <Link to={`/postdetails/${post._id}`}> */}\n          {/* <div className=\"card-content\">\n                <div className=\"date\">{this.outputDate(post.date)}</div>\n\n                <div className=\"content\">\n                  {post.postPhoto ? (\n                    <img\n                      style={{ width: \"100px\" }}\n                      src={post.postPhoto && post.postPhoto}\n                      alt=\"\"\n                    ></img>\n                  ) : null}\n                  {/* {this.handlePostLinks()} */}\n\n          {/* {post.postContent} */}\n\n          {/* <br /> */}\n          {/* </div> */}\n          {/* </div> */}\n          {/* </Link> */}\n          {/* <footer className=\"card-footer\">\n            <div\n              onClick={this.handleLike}\n              className={`card-footer-item ${classes}`}\n            >\n              {this.state.isLiked ? (\n                <ThumbUpIcon color=\"primary\" />\n              ) : (\n                <ThumbUpIcon color=\"disabled\" />\n              )}{\" \"}\n              <div>{this.state.numberOfLikes}</div>\n            </div>\n\n            <div className=\"card-footer-item\">\n              <InsertCommentIcon />\n              <div>{this.state.numberOfComments}</div>\n            </div>\n          </footer> */}\n\n          {/* </div> */}\n          <div className=\"post-main\">\n            <div>\n              <img src={post.postedBy.image} alt=\"user profile\" />\n            </div>\n            <div className=\"post-section\">\n              <div className=\"post-user-info\">\n                <div className=\"post-user\">\n                  {\" \"}\n                  {post.postedBy && post.postedBy.firstName}{\" \"}\n                  {post.postedBy && post.postedBy.lastName}\n                  {\"   \"}\n                </div>\n                <div className=\"date\">{this.outputDate(post.date)}</div>\n              </div>\n              {post.postPhoto ? (\n                <img\n                  onClick={this.toggleShowPicture}\n                  className=\"post-image\"\n                  style={{ width: \"100px\" }}\n                  src={post.postPhoto && post.postPhoto}\n                  alt=\"\"\n                ></img>\n              ) : null}\n              <Link to={`/postdetails/${post._id}`}>\n                {\" \"}\n                <div className=\"post-content\">{post.postContent}</div>\n              </Link>\n              <div className=\"post-actions\">\n                {\" \"}\n                <div onClick={this.handleLike}>\n                  {this.state.isLiked ? (\n                    <ThumbUpIcon fontSize=\"small\" color=\"primary\" />\n                  ) : (\n                    <ThumbUpIcon fontSize=\"small\" color=\"disabled\" />\n                  )}{\" \"}\n                  <div>{this.state.numberOfLikes}</div>\n                </div>\n                <div className=\"comment-icon\">\n                  <InsertCommentIcon />\n                  <div>{this.state.numberOfComments}</div>\n                </div>\n              </div>\n              {this.state.showPhoto ? (\n                <img\n                  onClick={this.toggleShowPicture}\n                  className=\"large-img animated zoomIn\"\n                  src={post.postPhoto && post.postPhoto}\n                  alt=\"\"\n                ></img>\n              ) : null}\n            </div>\n          </div>\n        </Theme>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Post);\n","import styled, { keyframes } from \"styled-components\";\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n`;\n\nexport const Fade = styled.div`\n  background: transparent;\n  border-radius: 3px;\n  color: palevioletred;\n  margin: 0 1em;\n\n  animation: ${fadeIn} 1s linear;\n`;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../context/auth-context\";\nimport { withTheme } from \"./../context/theme-context\";\nimport postService from \"./../lib/post-service\";\nimport Post from \"./../components/Posts/Post\";\nimport \"bulma/css/bulma.css\";\nimport \"animate.css/source/animate.css\";\n\nimport { Theme } from \"./../styles/themes\";\nimport { Fade } from \"./../styles/fade\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\n\n//const ENDPOINT = \"http://localhost:5000\";\nconst ENDPOINT = process.env.REACT_APP_API_URL;\nlet socket = io(ENDPOINT);\n\nclass Private extends Component {\n  state = {\n    users: [],\n    posts: [],\n    post: \"\",\n    postPhoto: \"\",\n    newPosts: [],\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    this.handlePostsFollowedApi();\n    socket.emit(\"join-main\", { user: this.props.user._id }, (error) => {\n      if (error) {\n        console.log(error);\n      }\n    });\n    socket.on(\"online\", (user) => {\n      console.log(\"online\");\n      console.log(user);\n    });\n    socket.on(\"postIncoming\", () => {\n      console.log(\"new post\");\n      this.handlePostsFollowedApi();\n    });\n  }\n\n  handlePostsFollowedApi = () => {\n    postService\n      .getAllPostsByFollowedUsers()\n      .then((apiResponse) => {\n        this.setState({ users: apiResponse.data });\n        this.orderPosts();\n      })\n      .catch((err) => this.setState({ users: [] }));\n  };\n\n  orderPosts = () => {\n    //const postsArr = [...this.props.user.posts];\n    console.log(\"orderPosts\");\n    const postsArr = [...this.state.newPosts, ...this.props.user.posts];\n\n    this.state.users.forEach((user) => {\n      postsArr.push(...user.posts);\n    });\n    postsArr.sort((a, b) => {\n      if (a.date > b.date) {\n        return -1;\n      } else if (a.date > b.date) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this.setState({ posts: postsArr });\n  };\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleFileUpload = (e) => {\n    console.log(\"The file to be uploaded is: \", e.target.files);\n    const file = e.target.files[0];\n\n    const uploadData = new FormData();\n    // image => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new project in '/api/projects' POST route\n    uploadData.append(\"image\", file);\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/posts/upload`, uploadData, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(\"response is: \", response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n        this.setState({ postPhoto: response.data.secure_url });\n      })\n      .catch((err) => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  componentDidUpdate() {\n    // socket.on(\"postIncoming\", () => {\n    //   console.log(\"new post\");\n    //   this.handlePostsFollowedApi();\n    // });\n  }\n\n  postWithSocket = () => {\n    socket.emit(\"post\", {}, () => {});\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.postWithSocket();\n\n    postService\n      .createPost(this.props.user._id, this.state.post, this.state.postPhoto)\n      .then((createdPost) => {\n        console.log(createdPost);\n        const newPosts = [...this.state.newPosts];\n        newPosts.push(createdPost.data);\n        this.setState({ postPhoto: \"\", post: \"\", newPosts });\n        this.handlePostsFollowedApi();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"dashboard\">\n        <Theme dark={this.props.isDark}>\n          <div className=\"dashboard-header\">\n            <img src={this.props.user.image} alt=\"user profile\" />\n            <div>\n              <h2>Welcome {this.props.user && this.props.user.firstName}</h2>\n              <p>See New Posts Here!</p>\n            </div>\n          </div>\n\n          <form className=\"post-form\" onSubmit={this.handleSubmit}>\n            <div className=\"post-main\">\n              <div>\n                <img src={this.props.user.image} alt=\"user profile\" />\n              </div>\n              <div className=\"post-section\">\n                <div className=\"post-user-info\">\n                  <div className=\"post-user\">\n                    {\" \"}\n                    {this.props.user && this.props.user.firstName}{\" \"}\n                    {this.props.user && this.props.user.lastName}\n                    {\"   \"}\n                  </div>\n                </div>\n                {this.state.postPhoto === \"\" ? null : (\n                  <span>\n                    <img\n                      style={{ width: \"100px\" }}\n                      src={this.state.postPhoto && this.state.postPhoto}\n                      alt=\"\"\n                    ></img>\n                  </span>\n                )}\n                <textarea\n                  className=\"post\"\n                  name=\"post\"\n                  value={this.state.post}\n                  onChange={this.handleInput}\n                  placeholder=\"Share you code...\"\n                  required\n                />\n                <div className=\"post-actions\">\n                  <input\n                    name=\"postPhoto\"\n                    type=\"file\"\n                    // value={this.state.postPhoto}\n                    onChange={this.handleFileUpload}\n                  />\n                  <button className=\"button is-white s-size-7\" type=\"submit\">\n                    Post\n                  </button>{\" \"}\n                </div>\n              </div>\n            </div>\n\n            {this.state.postPhoto === \"\" ? null : (\n              <span>\n                <img\n                  style={{ width: \"100px\" }}\n                  src={this.state.postPhoto && this.state.postPhoto}\n                  alt=\"\"\n                ></img>\n              </span>\n            )}\n          </form>\n          <Fade>\n            {this.state.posts.map((post) => {\n              return <Post key={post._id} post={post} />;\n            })}\n          </Fade>\n        </Theme>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Private);\n","import axios from \"axios\";\n\nclass PostService {\n  constructor() {\n    // this.api  is a reusable base of the request containing the base url (baseURL)\n    // of the API and the options ( `withCredentials: true` )\n    this.api = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true,\n    });\n  }\n\n  createConversation = (userId) => {\n    const pr = this.api.post(`/api/conversations/${userId}`);\n\n    return pr;\n  };\n\n  getConversations = () => {\n    const pr = this.api.get(`/api/conversations`);\n    return pr;\n  };\n\n  getConversationOne = (conversationId) => {\n    const pr = this.api.get(`/api/conversations/${conversationId}`);\n    return pr;\n  };\n\n  sendMessage = (conversationId, messageContent, userSentToId) => {\n    const pr = this.api.post(`/api/conversations/${conversationId}/message`, {\n      messageContent,\n      userSentToId,\n    });\n    return pr;\n  };\n\n  messageSeen = (conversationId) => {\n    const pr = this.api.get(\n      `/api/conversations/${conversationId}/message-seen`\n    );\n    return pr;\n  };\n\n  deleteMessage = (conversationId, messageId) => {\n    const pr = this.api.delete(\n      `/api/conversations/${conversationId}/message/${messageId}`\n    );\n\n    return pr;\n  };\n}\n\nconst postService = new PostService();\n\nexport default postService;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../../context/auth-context\";\nimport UserService from \"./../../lib/user-service\";\nimport conversationService from \"./../../lib/conversation-service\";\n\nimport { Link } from \"react-router-dom\";\nimport authService from \"../../lib/auth-service\";\n\nclass SearchResult extends Component {\n  state = {\n    isFollowing: false,\n    hasConversation: false,\n    conversationId: \"\",\n    user: {},\n  };\n\n  componentDidMount() {\n    this.checkFollow();\n    this.checkConversation();\n  }\n\n  checkFollow = () => {\n    const currentUserFollowing = this.props.user.following;\n    const userSearchId = this.props.userSearch._id;\n    let isFollowing = false;\n    currentUserFollowing.forEach((user) => {\n      if (user === userSearchId) {\n        isFollowing = true;\n      }\n    });\n    this.setState({ isFollowing });\n  };\n\n  checkConversation = () => {\n    const currentUserConversations = this.props.user.conversations;\n    console.log(currentUserConversations);\n    const userSearchId = this.props.userSearch._id;\n\n    let hasConversation = false;\n\n    if (currentUserConversations.length === 0) {\n      this.setState({ hasConversation });\n      return;\n    }\n\n    currentUserConversations.forEach((conversation) => {\n      if (conversation.users.includes(userSearchId)) {\n        hasConversation = true;\n        this.setState({ conversationId: conversation._id });\n      }\n    });\n\n    this.setState({ hasConversation });\n  };\n  handleFollow = () => {\n    UserService.follow(this.props.userSearch._id).then((apiResponse) => {\n      console.log(apiResponse);\n      this.setState({ isFollowing: true });\n    });\n  };\n\n  handleUnfollow = () => {\n    UserService.unfollow(this.props.userSearch._id).then((apiResponse) => {\n      console.log(apiResponse);\n      this.setState({ isFollowing: false });\n    });\n  };\n\n  createConversation = () => {\n    const userSearchId = this.props.userSearch._id;\n\n    conversationService.createConversation(userSearchId).then((apiResponse) => {\n      console.log(apiResponse);\n      const conversationId = apiResponse.data;\n\n      this.setState({ hasConversation: true, conversationId });\n    });\n  };\n\n  render() {\n    const { userSearch } = this.props;\n    return (\n      <tr className=\"profile-link\">\n        <td>\n          <img src={userSearch.image} alt=\"user profile\" />\n        </td>\n\n        <td>\n          <Link to={`/profile/${userSearch._id}`}>\n            <p>{userSearch && userSearch.firstName} </p>\n            <p>{userSearch && userSearch.lastName}</p>\n          </Link>\n        </td>\n        <td>\n          {this.state.isFollowing ? (\n            <button\n              className=\"button is-white is-light is-size-7\"\n              onClick={this.handleUnfollow}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              className=\"button is-success is-light is-size-7\"\n              onClick={this.handleFollow}\n            >\n              Follow\n            </button>\n          )}\n        </td>\n        <td>\n          {this.state.hasConversation ? (\n            <Link\n              className=\"button is-success is-light is-size-7\"\n              to={`/conversation-details/${this.state.conversationId}`}\n            >\n              Go to chat\n            </Link>\n          ) : (\n            <button\n              className=\"button is-white is-light is-size-7\"\n              onClick={this.createConversation}\n            >\n              Start Chat\n            </button>\n          )}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default withAuth(SearchResult);\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../context/auth-context\";\nimport userService from \"./../lib/user-service\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"./../styles/themes\";\nimport SearchResult from \"./../components/SeachResult/SearchResult\";\nimport { Fade } from \"./../styles/fade\";\n\nclass Search extends Component {\n  state = {\n    users: [],\n    searchResults: [],\n    searchInput: \"\",\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    userService\n      .getAll()\n      .then((apiResponse) => {\n        console.log(apiResponse);\n        this.setState({\n          users: apiResponse.data,\n          searchResults: apiResponse.data,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleSearchResults = (value) => {\n    const { users } = this.state;\n\n    const filteredUsers = users.filter((user) => {\n      const lowercaseFirstName = user.firstName.toLowerCase();\n      const lowercaseLastName = user.lastName.toLowerCase();\n      const lowercaseSearch = value.toLowerCase();\n\n      if (\n        lowercaseFirstName.startsWith(lowercaseSearch) ||\n        lowercaseLastName.startsWith(lowercaseSearch)\n      ) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    this.setState({ searchResults: filteredUsers });\n  };\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n    this.handleSearchResults(value);\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <Theme dark={this.props.isDark}>\n        <div className=\"search\">\n          <h1>Search For A Fellow Developer</h1>\n          <input\n            className=\"input is-primary\"\n            name=\"searchInput\"\n            value={this.state.searchInput}\n            onChange={this.handleInput}\n            autoComplete=\"off\"\n          />\n          {this.state.searchInput === \"\" ? null : (\n            <div className=\"animated slideInLeft\">\n              <table>\n                <tbody>\n                  {this.state.searchResults.map((user) => {\n                    return <SearchResult key={user._id} userSearch={user} />;\n                  })}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </Theme>\n    );\n  }\n}\n\nexport default withAuth(Search);\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../../context/auth-context\";\nimport { Link } from \"react-router-dom\";\nimport userService from \"./../../lib/user-service\";\n\nclass Notifications extends Component {\n  state = {\n    notifications: [],\n  };\n  //   this.props.user.notifications.reverse().slice(0, 5)\n  componentDidMount() {\n    //this.filterLikes();\n    this.setState({\n      notifications: [...this.props.notifications].reverse().slice(0, 5),\n    });\n  }\n\n  filterNotifications = (notificationId) => {\n    const filteredNotifications = this.state.notifications.filter(\n      (notification) => {\n        if (notificationId === notification._id) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n    );\n\n    this.setState({ notifications: filteredNotifications });\n  };\n\n  deleteNotification = (notificationId) => {\n    userService\n      .deleteNotification(notificationId)\n      .then((apiResponse) => {\n        this.filterNotifications(notificationId);\n        this.props.reduceNotifications();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const notifications = this.state.notifications;\n    return (\n      <div className=\"notifications-menu animated zoomIn\">\n        {notifications.map((notification) => {\n          return notification.notificationInfo !== \"follow\" ? (\n            <div className=\"notification-item\" key={notification._id}>\n              <Link to={`/postdetails/${notification.post}`}>\n                <p>\n                  {notification.userActivity.firstName}{\" \"}\n                  {notification.userActivity.lastName}{\" \"}\n                  {notification.notificationInfo} your post\n                </p>\n              </Link>\n              <button\n                className=\"delete\"\n                onClick={() => this.deleteNotification(notification._id)}\n              ></button>\n            </div>\n          ) : (\n            <div className=\"notification-item\" key={notification._id}>\n              <Link\n                onClick={this.props.toggleNotifications}\n                to={`/profile/${notification.userActivity._id}`}\n              >\n                <p>\n                  {notification.userActivity.firstName}{\" \"}\n                  {notification.userActivity.lastName} started following you\n                </p>\n              </Link>\n              <button\n                className=\"delete\"\n                onClick={() => this.deleteNotification(notification._id)}\n              >\n                Delete\n              </button>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Notifications);\n","import React, { Component } from \"react\";\nimport userService from \"./../../lib/user-service\";\nimport axios from \"axios\";\n\nclass EditProfile extends Component {\n  state = {\n    image: \"\",\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    userService\n      .editPhoto(this.state.image)\n      .then((apiResponse) => {\n        console.log(apiResponse);\n        this.setState({ image: \"\" });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  handleFileUpload = (e) => {\n    console.log(\"The file to be uploaded is: \", e.target.files);\n    const file = e.target.files[0];\n\n    const uploadData = new FormData();\n    // image => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new project in '/api/projects' POST route\n    uploadData.append(\"image\", file);\n\n    axios\n      .post(\"http://localhost:5000/api/users/upload\", uploadData, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(\"response is: \", response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n        this.setState({ image: response.data.secure_url });\n      })\n      .catch((err) => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            name=\"image\"\n            type=\"file\"\n            // value={this.state.image}\n            onChange={this.handleFileUpload}\n          />\n\n          {this.state.postPhoto === \"\" ? null : (\n            <span>\n              <img\n                style={{ width: \"100px\" }}\n                src={this.state.postPhoto && this.state.postPhoto}\n                alt=\"\"\n              ></img>\n            </span>\n          )}\n          <button type=\"submit\">Save Changes</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default EditProfile;\n","import React, { Component } from \"react\";\nimport EditProfile from \"./../EditProfile/EditProfile\";\nimport userService from \"./../../lib/user-service\";\nimport { withAuth } from \"./../../context/auth-context\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport \"bulma/css/bulma.css\";\n\nclass Settings extends Component {\n  state = {\n    showEdit: false,\n    isFollowed: false,\n    showSettings: false,\n  };\n\n  componentDidMount() {\n    this.checkFollow();\n  }\n\n  toggleEdit = () => {\n    this.setState({ showEdit: !this.state.showEdit });\n  };\n\n  handleFollow = () => {\n    if (!this.state.isFollowed) {\n      userService.follow(this.props.user._id).then((apiResponse) => {\n        this.setState({ isFollowed: true });\n      });\n    } else if (this.state.isFollowed) {\n      userService\n        .unfollow(this.props.user._id)\n        .then((apiResponse) => {\n          console.log(apiResponse.data.following);\n          this.setState({ isFollowed: false });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  checkFollow = () => {\n    console.log(this.props);\n\n    this.props.user.followers.forEach((userFollowing) => {\n      if (this.props.user._id === userFollowing) {\n        this.setState({ isFollowed: true });\n      }\n    });\n  };\n  toggleSettings = () => {\n    this.setState({ showSettings: !this.state.showSettings });\n  };\n\n  render() {\n    return (\n      <div className=\"settings\">\n        <div onClick={this.toggleSettings}>\n          <SettingsIcon />\n        </div>\n        {this.state.showSettings ? (\n          <div className=\"settings-menu\">\n            <button\n              className=\"is-size-7\t button is-white\"\n              onClick={this.toggleEdit}\n            >\n              Edit Photo\n            </button>\n            {this.state.showEdit ? <EditProfile /> : null}\n\n            {/* <button\n              className=\"is-size-7\t button is-white\"\n              onClick={this.handleFollow}\n            >\n              {this.state.isFollowed\n                ? \"Hide Posts on My Dashboard\"\n                : \"Show Posts on My Dashboard\"}\n            </button> */}\n\n            <button\n              className=\"is-size-7\t button is-white\"\n              onClick={this.props.logout}\n            >\n              Logout\n            </button>\n\n            <button\n              className=\"is-size-7\t button is-white\"\n              onClick={this.props.toggleTheme}\n            >\n              Toggle dark mode{\" \"}\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Settings);\n","import styled, { css } from \"styled-components\";\n\nexport const ProfileButton = styled.div`\n  ${(props) =>\n    props.highlight &&\n    css`\n      border: 0.1rem solid #3b945e;\n      border-radius: 5px;\n    `}\n`;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../../context/auth-context\";\nimport postService from \"./../../lib/post-service\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"./../../styles/themes\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\n\n// import \"./../Posts/Post.css\";\nimport \"bulma/css/bulma.css\";\n\nclass Post extends Component {\n  state = {\n    isliked: false,\n    showDelete: false,\n    numberOfLikes: 0,\n    numberOfComments: 0,\n  };\n\n  countNumberOfLikes = () => {\n    let numberOfLikes = this.props.post.likes.length;\n    this.setState({ numberOfLikes });\n  };\n\n  countNumberOfComments = () => {\n    let numberOfComments = this.props.post.comments.length;\n    this.setState({ numberOfComments });\n  };\n\n  handleLike = () => {\n    if (!this.state.isLiked) {\n      postService\n        .likePost(this.props.post._id)\n        .then((postLiked) => {\n          let numberOfLikes = this.state.numberOfLikes;\n          numberOfLikes++;\n          console.log(numberOfLikes);\n          this.setState({ numberOfLikes: numberOfLikes });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    if (this.state.isLiked) {\n      postService\n        .unlikePost(this.props.post._id)\n        .then((postUnliked) => {\n          let numberOfLikes = this.state.numberOfLikes;\n          numberOfLikes--;\n          console.log(numberOfLikes);\n          this.setState({ numberOfLikes: numberOfLikes });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    this.setState({ isLiked: !this.state.isLiked });\n  };\n\n  componentDidMount() {\n    let isLiked = false;\n    if (this.props.post) {\n      this.props.post.likes.forEach((likeId) => {\n        if (likeId === this.props.user._id) {\n          isLiked = true;\n        }\n      });\n    }\n    this.setState({ isLiked: isLiked });\n    this.countNumberOfLikes();\n    this.countNumberOfComments();\n  }\n\n  toggleDelete = () => {\n    this.setState({ showDelete: !this.state.showDelete });\n  };\n\n  outputDate = (dateString) => {\n    const date = new Date(dateString);\n    const day = date.toDateString().split(\" \").slice(0, 3).join(\" \");\n\n    const time = date.toLocaleString().split(\" \").reverse()[0].slice(0, 5);\n    return time + \" \" + day;\n  };\n\n  render() {\n    const { post } = this.props;\n    let classes = \"\";\n    if (this.state.isLiked) {\n      classes = \"liked\";\n    }\n    return (\n      <Theme dark={this.props.isDark}>\n        {/* <header className=\"card-header\">\n            <p className=\"card-header-title\">\n              {post.postedBy && post.postedBy.firstName}{\" \"}\n              {post.postedBy && post.postedBy.lastName}\n            </p>\n            <p\n              onClick={this.toggleDelete}\n              href=\"#\"\n              className=\"delete-icon delete\"\n            ></p>\n            <p href=\"#\" className=\"card-header-icon\" aria-label=\"more options\">\n              <span className=\"icon\">\n                <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n              </span>\n            </p>\n          </header> */}\n\n        {/* {post.postPhoto ? (\n            <img\n              style={{ width: \"100px\" }}\n              src={post.postPhoto && post.postPhoto}\n              alt=\"\"\n            ></img>\n          ) : null}\n          {this.state.showDelete ? (\n            <div>\n              <button\n                className=\"button is-warning is-light is-size-7\"\n                onClick={() => this.props.deletePost(post._id)}\n              >\n                Confirm Delete\n              </button>\n              <button\n                className=\"button is-info is-light is-size-7\"\n                onClick={this.toggleDelete}\n              >\n                Cancel\n              </button>\n            </div>\n          ) : null} */}\n\n        {/* <Link to={`/postdetails/${post._id}`}>\n            <div className=\"card-content\">\n              <div className=\"date\">{this.outputDate(post.date)}</div>\n\n              <div className=\"content\">\n                {post.postContent} <br />\n              </div>\n            </div>\n          </Link> */}\n        {/* <footer className=\"card-footer\">\n            <div\n              onClick={this.handleLike}\n              className={`card-footer-item ${classes}`}\n            >\n              {this.state.isLiked ? (\n                <ThumbUpIcon color=\"primary\" />\n              ) : (\n                <ThumbUpIcon color=\"disabled\" />\n              )}{\" \"}\n              <div> {this.state.numberOfLikes}</div>\n            </div>\n\n            <div className=\"card-footer-item\">\n              <InsertCommentIcon />\n              <div>{this.state.numberOfComments}</div>\n            </div>\n          </footer> */}\n        <div>\n          <div className=\"post-main\">\n            <div>\n              <img src={post.postedBy.image} alt=\"user profile\" />\n            </div>\n            <div className=\"post-section\">\n              <div className=\"post-user-info\">\n                <div className=\"post-user\">\n                  {\" \"}\n                  {post.postedBy && post.postedBy.firstName}{\" \"}\n                  {post.postedBy && post.postedBy.lastName}\n                  {\"   \"}\n                </div>\n                <div className=\"date\">{this.outputDate(post.date)}</div>\n                <p\n                  onClick={this.toggleDelete}\n                  href=\"#\"\n                  className=\"delete-icon delete is-size-7\"\n                ></p>\n                {this.state.showDelete ? (\n                  <div>\n                    <button\n                      className=\"button is-warning is-light is-size-7\"\n                      onClick={() => this.props.deletePost(post._id)}\n                    >\n                      Confirm Delete\n                    </button>\n                    <button\n                      className=\"button is-info is-light is-size-7\"\n                      onClick={this.toggleDelete}\n                    >\n                      Cancel\n                    </button>\n                  </div>\n                ) : null}{\" \"}\n              </div>\n              <div className=\"post-content\">\n                {post.postPhoto ? (\n                  <img\n                    className=\"post-image\"\n                    style={{ width: \"100px\" }}\n                    src={post.postPhoto && post.postPhoto}\n                    alt=\"\"\n                  ></img>\n                ) : null}\n                {post.postContent}\n              </div>\n              <div className=\"post-actions\">\n                {\" \"}\n                <div onClick={this.handleLike}>\n                  {this.state.isLiked ? (\n                    <ThumbUpIcon fontSize=\"small\" color=\"primary\" />\n                  ) : (\n                    <ThumbUpIcon fontSize=\"small\" color=\"disabled\" />\n                  )}{\" \"}\n                  <div>{this.state.numberOfLikes}</div>\n                </div>\n                <div className=\"comment-icon\">\n                  <InsertCommentIcon />\n                  <div>{this.state.numberOfComments}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Theme>\n    );\n  }\n}\n\nexport default withAuth(Post);\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../context/auth-context\";\nimport userService from \"./../lib/user-service\";\nimport Post from \"./../components/Posts/Post\";\nimport Notifications from \"./../components/Notifications/Notifications\";\nimport EditProfile from \"./../components/EditProfile/EditProfile\";\nimport Settings from \"./../components/Settings/Settings\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { useSpring, animated } from \"react-spring\";\n\nimport { Theme } from \"./../styles/themes\";\nimport { ProfileButton } from \"./../styles/profile-button\";\n\nimport UserPost from \"./../components/UserPost/UserPost\";\nimport axios from \"axios\";\nimport \"bulma/css/bulma.css\";\n\nimport { Link } from \"react-router-dom\";\nimport postService from \"../lib/post-service\";\nimport authService from \"../lib/auth-service\";\n\nclass Profile extends Component {\n  state = {\n    user: {},\n    posts: [],\n    isAdmin: false,\n    isFollowed: false,\n    showDelete: false,\n    userId: \"\",\n    showPosts: true,\n    showLikes: false,\n    showFollowing: false,\n    postInput: \"\",\n    postPhoto: \"\",\n    showNotifications: false,\n    numberOfNotifications: 0,\n    newNotification: false,\n    showSettings: false,\n    following: [],\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    this.handlePostApi(true);\n  }\n\n  handlePostApi = (mount) => {\n    const profileId = this.props.match.params.id;\n    userService\n      .getOne(profileId)\n      .then((apiResponse) => {\n        this.setState({\n          user: apiResponse.data.user,\n          isAdmin: apiResponse.data.isAdmin,\n          userId: profileId,\n          newNotification: apiResponse.data.user.newNotification,\n        });\n        if (mount) {\n          this.displayPosts();\n        }\n\n        this.checkFollow();\n        this.orderPosts();\n        this.setFollowing();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  orderPosts = () => {\n    const postsArr = [];\n\n    this.state.user.posts.forEach((post) => {\n      postsArr.push(post);\n    });\n    postsArr.sort((a, b) => {\n      if (a.date > b.date) {\n        return -1;\n      } else if (a.date > b.date) {\n        return 1;\n      }\n      return 0;\n    });\n\n    this.setState({\n      posts: postsArr,\n      numberOfNotifications: this.props.user.notifications.length,\n    });\n  };\n\n  componentDidUpdate = () => {\n    if (this.state.userId !== this.props.match.params.id) {\n      this.handlePostApi();\n    }\n  };\n\n  checkFollow = () => {\n    this.state.user.followers.forEach((userFollowing) => {\n      if (this.props.user._id === userFollowing) {\n        this.setState({ isFollowed: true });\n      }\n    });\n  };\n\n  handleFollow = () => {\n    if (!this.state.isFollowed) {\n      userService.follow(this.state.user._id).then((apiResponse) => {\n        this.setState({ isFollowed: true });\n      });\n    } else if (this.state.isFollowed) {\n      userService\n        .unfollow(this.state.user._id)\n        .then((apiResponse) => {\n          console.log(apiResponse.data.following);\n          this.setState({ isFollowed: false });\n        })\n        .catch((err) => console.log(err));\n    }\n  };\n\n  deletePost = (postId) => {\n    postService\n      .delete(postId)\n      .then((apiResponse) => {\n        this.handlePostApi();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  displayPosts = () => {\n    this.handlePostApi(false);\n\n    this.setState({ showPosts: true, showLikes: false, showFollowing: false });\n  };\n  displayLikes = () => {\n    this.handlePostApi(false);\n\n    this.setState({ showPosts: false, showLikes: true, showFollowing: false });\n  };\n  displayFollowing = () => {\n    this.handlePostApi(false);\n\n    this.setState({ showPosts: false, showLikes: false, showFollowing: true });\n  };\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    postService\n      .createPost(\n        this.props.user._id,\n        this.state.postInput,\n        this.state.postPhoto\n      )\n      .then((createdPost) => {\n        this.handlePostApi();\n        this.setState({ postPhoto: \"\", postInput: \"\" });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  toggleNotifications = () => {\n    if (this.state.newNotification) {\n      userService\n        .seenNotification()\n        .then((apiResponse) => {\n          this.setState({ newNotification: false });\n        })\n        .catch((err) => console.log(err));\n    }\n    this.setState({ showNotifications: !this.state.showNotifications });\n  };\n\n  reduceNotifications = () => {\n    let notifications = this.state.numberOfNotifications;\n\n    notifications--;\n    this.setState({ numberOfNotifications: notifications });\n  };\n\n  toggleSettings = () => {\n    this.setState({ showSettings: !this.state.showSettings });\n  };\n\n  setFollowing = () => {\n    const following = this.state.user.following;\n    const userProfile = this.state.user;\n    const filteredFollowing = following.filter((user) => {\n      if (user._id === userProfile._id) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    this.setState({ following: filteredFollowing });\n  };\n\n  handleFileUpload = (e) => {\n    console.log(\"The file to be uploaded is: \", e.target.files);\n    const file = e.target.files[0];\n\n    const uploadData = new FormData();\n    // image => this name has to be the same as in the model since we pass\n    // req.body to .create() method when creating a new project in '/api/projects' POST route\n    uploadData.append(\"image\", file);\n\n    axios\n      .post(`${process.env.REACT_APP_API_URL}/api/posts/upload`, uploadData, {\n        withCredentials: true,\n      })\n      .then((response) => {\n        console.log(\"response is: \", response);\n        // after the console.log we can see that response carries 'secure_url' which we can use to update the state\n        this.setState({ postPhoto: response.data.secure_url });\n      })\n      .catch((err) => {\n        console.log(\"Error while uploading the file: \", err);\n      });\n  };\n  getNumberOfFollowers = () => {\n    const isAdmin = this.state.isAdmin;\n    if (isAdmin) {\n      if (this.state.isFollowed) {\n        return this.state.user.following.length - 1;\n      } else {\n        return this.state.user.following.length;\n      }\n    } else {\n      return this.state.user.following.length;\n    }\n  };\n  outputDate = (dateString) => {\n    const date = new Date(dateString);\n    const day = date.toDateString().split(\" \").slice(1, 4).join(\" \");\n\n    return day;\n  };\n\n  render() {\n    // console.log(this.state.user);\n    // if (this.state.user.following) {\n    //   console.log(this.state.user.following.length);\n    // }\n    // const props = useSpring({\n    //   to: { opacity: 1 },\n    //   from: { opacity: 0 },\n    // });\n    const user = this.state.user;\n    return (\n      <div className=\"profile\">\n        <Theme dark={this.props.isDark}>\n          <div className=\"profile-header\">\n            <img src={this.state.user.image} alt=\"user profile\" />\n            <div>\n              <p>\n                {this.state.user.firstName} {this.state.user.lastName}\n              </p>\n              <p className=\"join-date\">\n                Joined on {this.outputDate(this.state.user.created_at)}\n              </p>\n            </div>\n\n            {this.state.isAdmin ? (\n              <Settings userProfile={this.state.user} />\n            ) : (\n              <button\n                className=\"button is-white is-size-7\"\n                onClick={this.handleFollow}\n              >\n                {this.state.isFollowed ? \"Unfollow\" : \"Follow\"}\n              </button>\n            )}\n            <div className=\"notifications\">\n              {this.state.isAdmin ? (\n                <div>\n                  {this.state.newNotification ? (\n                    <div\n                      onMouseEnter={this.toggleNotifications}\n                      id=\"new-notification\"\n                      className=\"notification is-primary animated bounce\"\n                    >\n                      You have a new notification\n                    </div>\n                  ) : null}\n\n                  <div onClick={this.toggleNotifications}>\n                    <Badge\n                      badgeContent={this.state.numberOfNotifications}\n                      color=\"primary\"\n                      max={10}\n                    >\n                      <NotificationsIcon />\n                    </Badge>\n                  </div>\n                </div>\n              ) : null}\n              {this.state.showNotifications ? (\n                <Notifications\n                  toggleNotifications={this.toggleNotifications}\n                  notifications={this.state.user.notifications}\n                  reduceNotifications={this.reduceNotifications}\n                />\n              ) : null}\n            </div>\n          </div>\n\n          <div className=\"button-group\">\n            <ProfileButton highlight={this.state.showPosts}>\n              <div className=\"button is-white\" onClick={this.displayPosts}>\n                {\" \"}\n                Posts {this.state.posts && this.state.posts.length}\n              </div>\n            </ProfileButton>\n\n            <ProfileButton highlight={this.state.showLikes}>\n              <div className=\"button is-white\" onClick={this.displayLikes}>\n                {\" \"}\n                Likes {this.state.user.likes && this.state.user.likes.length}\n              </div>\n            </ProfileButton>\n            <ProfileButton highlight={this.state.showFollowing}>\n              <div className=\"button is-white\" onClick={this.displayFollowing}>\n                Following{\" \"}\n                {this.state.user.following && this.state.following.length}\n              </div>\n            </ProfileButton>\n          </div>\n\n          {this.state.showPosts ? (\n            <div className=\"animated fadeInUp\">\n              {this.state.isAdmin ? (\n                <form className=\"post-form\" onSubmit={this.handleSubmit}>\n                  <textarea\n                    className=\"post\"\n                    name=\"postInput\"\n                    value={this.state.postInput}\n                    onChange={this.handleInput}\n                    required\n                  />\n                  <br />\n                  <input\n                    name=\"postPhoto\"\n                    type=\"file\"\n                    // value={this.state.image}\n                    onChange={this.handleFileUpload}\n                  />\n                  {this.state.postPhoto === \"\" ? null : (\n                    <span>\n                      <img\n                        style={{ width: \"100px\" }}\n                        src={this.state.postPhoto && this.state.postPhoto}\n                        alt=\"\"\n                      ></img>\n                    </span>\n                  )}\n\n                  <button className=\"button is-white s-size-7\" type=\"submit\">\n                    Post\n                  </button>\n                </form>\n              ) : null}\n              {this.state.posts &&\n                this.state.posts.map((post) => {\n                  return (\n                    <div key={post._id}>\n                      {this.state.isAdmin ? (\n                        <UserPost post={post} deletePost={this.deletePost} />\n                      ) : (\n                        <Post post={post} />\n                      )}\n                    </div>\n                  );\n                })}{\" \"}\n            </div>\n          ) : null}\n\n          {/* <animated.div style={props}>\n            {this.state.showLikes ? (\n              <div>\n                {this.state.user.likes &&\n                  this.state.user.likes.map((post) => {\n                    return <Post key={post._id} post={post} />;\n                  })}\n              </div>\n            ) : null}\n          </animated.div> */}\n\n          {this.state.showLikes ? (\n            <div className=\"animated fadeInUp\">\n              {this.state.user.likes &&\n                this.state.user.likes.map((post) => {\n                  return <Post key={post._id} post={post} />;\n                })}\n            </div>\n          ) : null}\n          {this.state.showFollowing ? (\n            <div className=\"animated fadeInUp\">\n              {this.state.following.length === 0 ? (\n                <h3>Not following anyone</h3>\n              ) : (\n                <table>\n                  <tbody>\n                    {this.state.following.map((user) => {\n                      return (\n                        <tr key={user._id} className=\"following-link\">\n                          <td>\n                            <img src={user.image} alt=\"user profile\" />\n                          </td>\n\n                          <td>\n                            <p>\n                              <Link to={`/profile/${user._id}`}>\n                                {user.firstName} {user.lastName}\n                              </Link>\n                            </p>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              )}\n            </div>\n          ) : null}\n        </Theme>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Profile);\n","import React, { Component } from \"react\";\nimport postService from \"./../../lib/post-service\";\nimport { withAuth } from \"./../../context/auth-context\";\nimport { Link } from \"react-router-dom\";\nclass Comment extends Component {\n  state = {\n    isAdmin: false,\n  };\n\n  componentDidMount() {\n    this.handleIsAdmin();\n  }\n\n  handleIsAdmin = () => {\n    const createdById = this.props.comment.createdBy._id;\n    const currentUserId = this.props.user._id;\n    console.log(createdById, currentUserId);\n    if (createdById === currentUserId) {\n      console.log(true);\n      this.setState({ isAdmin: true });\n    } else {\n      this.setState({ isAdmin: false });\n    }\n  };\n\n  deleteComment = () => {\n    const postId = this.props.comment.post;\n    const commentId = this.props.comment._id;\n    postService\n      .deleteComment(postId, commentId)\n      .then((apiResponse) => {\n        console.log(\"clicked\");\n        console.log(apiResponse);\n        this.props.getPostDetails();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  render() {\n    const { comment } = this.props;\n\n    return (\n      <div>\n        <div className=\"post-main\">\n          <div>\n            <img src={`${comment.createdBy.image}`} alt=\"user profile\" />\n          </div>\n          <div className=\"post-section\">\n            <div className=\"post-user-info\">\n              <Link to={`/profile/${comment.createdBy._id}`}>\n                {\" \"}\n                <div className=\"post-user\">\n                  {\" \"}\n                  {comment.createdBy.firstName} {comment.createdBy.lastName}\n                  {\"   \"}\n                </div>{\" \"}\n              </Link>\n\n              <div className=\"date\">\n                {this.props.outputDate(comment.created_at)}\n              </div>\n              {/* {this.state.isAdmin ? (\n                <p\n                  onClick={this.deleteComment}\n                  href=\"#\"\n                  className=\"delete-icon delete\"\n                ></p>\n              ) : null} */}\n            </div>{\" \"}\n            <div className=\"post-content\"> {comment.commentContent}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Comment);\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../context/auth-context\";\nimport postService from \"./../lib/post-service\";\nimport { Link } from \"react-router-dom\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\nimport Comment from \"./../components/Comment/Comment\";\n\nclass PostDetails extends Component {\n  state = {\n    post: {},\n    isLiked: false,\n    commentInput: \"\",\n    numberOfLikes: 0,\n    numberOfComments: 0,\n    showLikes: false,\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n\n    this.handlePostById();\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\");\n  }\n  countNumberOfLikes = () => {\n    let numberOfLikes = this.state.post.likes.length;\n    this.setState({ numberOfLikes });\n  };\n\n  countNumberOfComments = () => {\n    let numberOfComments = this.state.post.comments.length;\n    this.setState({ numberOfComments });\n  };\n\n  setLike = () => {\n    let isLiked = false;\n\n    this.state.post.likes.forEach((user) => {\n      if (user._id === this.props.user._id) {\n        isLiked = true;\n      }\n    });\n\n    this.setState({ isLiked: isLiked });\n  };\n\n  toggleLikes = () => {\n    this.setState({ showLikes: !this.state.showLikes });\n  };\n\n  handlePostById = () => {\n    const { postId } = this.props.match.params;\n    postService\n      .getById(postId)\n      .then((apiResponse) => {\n        this.setState({ post: apiResponse.data });\n        this.setLike();\n        this.countNumberOfLikes();\n        this.countNumberOfComments();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleLike = () => {\n    if (!this.state.isLiked) {\n      postService\n        .likePost(this.state.post._id)\n        .then((postLiked) => {\n          let numberOfLikes = this.state.numberOfLikes;\n          numberOfLikes++;\n          this.setState({ numberOfLikes: numberOfLikes });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    if (this.state.isLiked) {\n      postService\n        .unlikePost(this.state.post._id)\n        .then((postUnliked) => {\n          let numberOfLikes = this.state.numberOfLikes;\n          numberOfLikes--;\n          this.setState({ numberOfLikes: numberOfLikes });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    this.setState({ isLiked: !this.state.isLiked });\n  };\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    postService\n      .comment(this.state.post._id, this.state.commentInput)\n      .then((apiResponse) => {\n        console.log(apiResponse.data);\n        this.handlePostById();\n        this.setState({ commentInput: \"\" });\n      });\n  };\n\n  showCommentInput = () => {\n    return (\n      <form onSubmit={this.handleSubmit} className=\"post\">\n        <input\n          name=\"commentInput\"\n          value={this.state.commentInput}\n          onChange={this.handleInput}\n          autoComplete=\"off\"\n        />\n        <button className=\"button is-white s-size-7\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    );\n  };\n\n  handlePostLinks = () => {\n    const postContent = this.state.post.postContent.split(\" \");\n    console.log(postContent);\n\n    const postContentWithLinkSplit = postContent.map((word) => {\n      if (word.startsWith(\"http\") || word.startsWith(\"https\")) {\n        return <a href={`${word}`}>{word}</a>;\n      } else {\n        return word;\n      }\n    });\n    console.log(postContentWithLinkSplit);\n\n    const postContentWithLink = postContentWithLinkSplit.join(\" \");\n\n    console.log(postContentWithLink);\n\n    return <p>{postContentWithLinkSplit}</p>;\n  };\n\n  outputDate = (dateString) => {\n    const date = new Date(dateString);\n    const day = date.toDateString().split(\" \").slice(0, 3).join(\" \");\n\n    const time = date.toLocaleString().split(\" \").reverse()[0].slice(0, 5);\n    return time + \" \" + day;\n  };\n\n  render() {\n    let classes = \"\";\n    if (this.state.isLiked) {\n      classes = \"liked\";\n    }\n    const post = this.state.post;\n\n    return (\n      <div>\n        {/* <header className=\"card-header\">\n          {post.postedBy && (\n            <Link to={`/profile/${post.postedBy._id}`}>\n              <div className=\"card-header-title\">\n                <img src={post.postedBy.image} alt=\"profile\" />\n                <div>\n                  {post.postedBy && post.postedBy.firstName}{\" \"}\n                  {post.postedBy && post.postedBy.lastName}\n                </div>\n              </div>\n            </Link>\n          )}\n\n          <p href=\"#\" className=\"card-header-icon\" aria-label=\"more options\">\n            <span className=\"icon\">\n              <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n            </span>\n          </p>\n        </header> */}\n        {/* {post.postPhoto ? (\n          <img\n            style={{ width: \"100px\" }}\n            src={post.postPhoto && post.postPhoto}\n            alt=\"\"\n          ></img>\n        ) : null} */}\n        {/* <div className=\"card-content\">\n          <div className=\"date\">{this.outputDate(post.date)}</div>\n\n          <div className=\"content\">\n            <p>{post.postContent}</p>\n            <br />\n            <time dateTime=\"2016-1-1\">\n              {post.data && post.date.toLocaleString()}\n            </time>\n            <p onClick={this.toggleLikes}>Likes</p>\n          </div>\n        </div> */}\n\n        {/* <footer className=\"card-footer\">\n          <div\n            onClick={this.handleLike}\n            className={`card-footer-item ${classes}`}\n          >\n            {this.state.isLiked ? (\n              <ThumbUpIcon color=\"primary\" />\n            ) : (\n              <ThumbUpIcon color=\"disabled\" />\n            )}{\" \"}\n            <div>{this.state.numberOfLikes}</div>\n          </div>\n\n          <div className=\"card-footer-item\">\n            <InsertCommentIcon />\n            <div>{this.state.numberOfComments}</div>\n          </div>\n        </footer> */}\n\n        <div id=\"post-details\">\n          <div className=\"post-main\">\n            <div>\n              <img\n                src={post.postedBy && post.postedBy.image}\n                alt=\"user profile\"\n              />\n            </div>\n            <div className=\"post-section\">\n              <div className=\"post-user-info\">\n                <div className=\"post-user\">\n                  {\" \"}\n                  {post.postedBy && post.postedBy.firstName}{\" \"}\n                  {post.postedBy && post.postedBy.lastName}\n                  {\"   \"}\n                </div>\n                <div className=\"date\">{this.outputDate(post.date)}</div>\n              </div>\n              <Link to={`/postdetails/${post._id}`}>\n                {\" \"}\n                <div className=\"post-content\"> {post.postContent}</div>\n              </Link>\n              <p className=\"like-btn\" onClick={this.toggleLikes}>\n                Likes\n              </p>\n              <div className=\"post-actions\">\n                {\" \"}\n                <div onClick={this.handleLike}>\n                  {this.state.isLiked ? (\n                    <ThumbUpIcon fontSize=\"small\" color=\"primary\" />\n                  ) : (\n                    <ThumbUpIcon fontSize=\"small\" color=\"disabled\" />\n                  )}{\" \"}\n                  <div>{this.state.numberOfLikes}</div>\n                </div>\n                <div className=\"comment-icon\">\n                  <InsertCommentIcon />\n                  <div>{this.state.numberOfComments}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <section className=\"comments\">\n            {post.comments &&\n              post.comments.map((comment) => {\n                return (\n                  <Comment\n                    outputDate={this.outputDate}\n                    key={comment._id}\n                    getPostDetails={this.handlePostById}\n                    comment={comment}\n                  />\n                );\n              })}\n\n            {this.showCommentInput()}\n          </section>\n          {this.state.showLikes ? (\n            <div className=\"likes animated zoomIn\">\n              {post.likes &&\n                post.likes.map((user) => {\n                  return (\n                    <Link to={`/profile/${user._id}`}>\n                      <p className=\"like-item\" key={user._id}>\n                        {user.firstName} {user.lastName}\n                      </p>{\" \"}\n                    </Link>\n                  );\n                })}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(PostDetails);\n","import styled, { css } from \"styled-components\";\n\nexport const MessagePreview = styled.div`\n  ${() =>\n    css`\n  background-color: #f2f2f2;\nimg{\n    width:30px;\n    height:30px;\n    border-radius:50%;\n    margin:5px 10px;\n}\n  h3{\n    \n    font-size:1.2rem;\n  }\n \n  p {\n    margin-bottom:5px;\n    font-size:0.8rem;\n`}\n`;\n","import React, { Component } from \"react\";\nimport { withAuth } from \"./../../context/auth-context\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport \"bulma/css/bulma.css\";\n\nclass ConversationListItem extends Component {\n  state = {\n    unreadMessages: 0,\n    isOnline: false,\n  };\n  outputDate = (dateString) => {\n    const date = new Date(dateString);\n    const day = date.toDateString().split(\" \").slice(0, 3).join(\" \");\n\n    const time = date.toLocaleString().split(\" \").reverse()[0].slice(0, 5);\n    return time + \" \" + day;\n  };\n\n  componentDidMount() {\n    this.checkNotifications();\n  }\n\n  checkOnline = () => {\n    const onlineArr = this.props.online;\n    let online = false;\n    const receiverUserId = this.props.receiverUser._id;\n    onlineArr.forEach((onlineUser) => {\n      if (onlineUser === receiverUserId) {\n        online = true;\n      }\n    });\n\n    return online;\n  };\n\n  checkNotifications = () => {\n    const currentUserId = this.props.user._id;\n    const conversation = this.props.conversation;\n\n    // conversation.notifications.forEach((userId)=>{\n    //     if(currentUserId === userId){\n    //         this.setState({unreadMessages: conversation.notifications.length})\n    //         break\n    //     }\n    // })\n    if (conversation.notifications[0] === currentUserId) {\n      console.log(\"notications\");\n      this.setState({ unreadMessages: conversation.notifications.length });\n    }\n  };\n  render() {\n    const { conversation, messageArrLength, receiverUser } = this.props;\n    // console.log(this.state.unreadMessages);\n    // console.log(\"isOnline\", this.checkOnline());\n    return (\n      <div className=\"message-preview\">\n        <img\n          src={`${receiverUser && receiverUser.image}`}\n          alt=\"profile image\"\n        />\n        <div className=\"message-name\">\n          <h3>\n            {receiverUser && receiverUser.firstName}{\" \"}\n            {receiverUser && receiverUser.lastName}{\" \"}\n            {this.checkOnline() ? (\n              <CheckIcon className=\"online animated bounce\" />\n            ) : (\n              <CheckIcon className=\"offline\" />\n            )}\n          </h3>\n\n          <div className=\"message-info\">\n            <div>\n              {this.state.unreadMessages === 0 ? null : (\n                <div className=\"unread\">\n                  <p>{this.state.unreadMessages}</p>\n                </div>\n              )}\n              {conversation.messages[messageArrLength] &&\n                conversation.messages[messageArrLength].userSent.firstName}\n              :{\" \"}\n              {conversation.messages[messageArrLength] &&\n                conversation.messages[messageArrLength].messageContent}\n            </div>\n            <p className=\"message-date\">\n              {this.outputDate(\n                conversation.messages[messageArrLength] &&\n                  conversation.messages[messageArrLength].updated_at\n              )}\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(ConversationListItem);\n","import React, { Component } from \"react\";\nimport conversationService from \"./../lib/conversation-service\";\nimport { withAuth } from \"./../context/auth-context\";\nimport { Link } from \"react-router-dom\";\nimport { MessagePreview } from \"./../styles/message-preview\";\nimport { Theme } from \"./../styles/themes\";\nimport ConversationListItem from \"../components/ConversationListItem/ConversationListItem\";\n\nimport io from \"socket.io-client\";\n\n//const ENDPOINT = \"http://localhost:5000\";\nconst ENDPOINT = process.env.REACT_APP_API_URL;\nlet socket = io(ENDPOINT);\n\nclass Conversation extends Component {\n  state = {\n    conversations: [],\n    online: [],\n  };\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.getConversations();\n    socket.emit(\"join-main\", { user: this.props.user._id }, (error) => {\n      if (error) {\n        console.log(error);\n      }\n    });\n    socket.on(\"online\", (users) => {\n      // console.log(\"online\");\n      // console.log(users);\n      const userIdArr = Object.values(users.users);\n\n      this.setState({ online: userIdArr });\n    });\n  }\n\n  componentDidUpdate() {\n    socket.on(\"online\", (user) => {});\n  }\n\n  componentWillUnmount() {\n    console.log(\"unmount\");\n  }\n\n  getConversations = () => {\n    conversationService\n      .getConversations()\n      .then((apiResponse) => {\n        this.setState({ conversations: apiResponse.data });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  filterCurrentUser = (userArr) => {\n    const filteredUserArr = userArr.filter((user) => {\n      if (user._id === this.props.user._id) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    return filteredUserArr[0];\n  };\n\n  render() {\n    const conversations = this.state.conversations;\n\n    return (\n      <Theme dark={this.props.isDark}>\n        <div className=\"conversation-list\">\n          <h1 className=\"subtitle is-4\">Conversations</h1>\n          {conversations &&\n            conversations.map((conversation) => {\n              const user = this.filterCurrentUser(conversation.users);\n\n              const messageArrLength = conversation.messages.length - 1;\n\n              return (\n                <div key={conversation._id}>\n                  <Link to={`/conversation-details/${conversation._id}`}>\n                    <div className=\"conversations\">\n                      <MessagePreview>\n                        <ConversationListItem\n                          online={this.state.online}\n                          conversation={conversation}\n                          messageArrLength={messageArrLength}\n                          receiverUser={user}\n                        />\n                      </MessagePreview>\n                    </div>\n                  </Link>\n                </div>\n              );\n            })}\n        </div>\n      </Theme>\n    );\n  }\n}\nexport default withAuth(Conversation);\n","import styled, { css } from \"styled-components\";\n\nexport const MessageHeader = styled.div`\n  ${() =>\n    css`\nbackground-color: #f2f2f2;\nposition:sticky;\ntop:0;\ndisplay:flex;\n jusifty-content:space-evenly;\nalign-items:center; \nwidth:100%;\nz-index:6;\n\nimg{\n  width:50px;\n  height:50px;\n  border-radius:50%;\n  margin:5px 10px;\n}\nh3{\n  margin: 0 10px;\n  font-size:1.3rem;\n}\n\np {\n  margin-bottom:5px;\n  font-size:0.8rem;\n`}\n`;\n","import React, { Component } from \"react\";\nimport conversationService from \"./../lib/conversation-service\";\nimport ConversationList from \"./ConversationList\";\nimport { withAuth } from \"./../context/auth-context\";\nimport { Theme, ThemeConversation } from \"./../styles/themes\";\nimport { MessageHeader } from \"./../styles/message-header\";\nimport io from \"socket.io-client\";\n\n//const ENDPOINT = \"http://localhost:5000\";\nconst ENDPOINT = process.env.REACT_APP_API_URL;\nlet socket = io(ENDPOINT);\n\nclass ConversationDetails extends Component {\n  state = {\n    conversation: {},\n    messages: [],\n    sendMessage: \"\",\n    intervalId: \"\",\n    userContact: {},\n    newMessages: [],\n    showDelete: false,\n  };\n\n  componentDidMount() {\n    this.getConversationMount();\n    // this.setTimerFromApiCall();\n    this.seenMessage();\n    this.scrollToBottom();\n  }\n\n  startSocket = () => {\n    socket.emit(\n      \"join\",\n      { room: this.state.conversation._id, user: this.props.user._id },\n      (error) => {\n        if (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    socket.on(\"message\", (message) => {\n      console.log(\"socket called\");\n      // console.log(message.text);\n      // const messages = [];\n      // messages.push(message.text);\n      // this.setState({ newMessages: messages });\n      this.getConversation();\n      this.seenMessage();\n    });\n\n    socket.on(\"online\", (user) => {\n      console.log(\"online\");\n    });\n\n    this.sendDelete();\n  };\n\n  componentDidUpdate() {\n    const messages = this.state.newMessages;\n\n    // socket.once(\"message\", (message) => {\n    //   console.log(\"socket called\");\n    //   // console.log(message.text);\n    //   // messages.push(message.text);\n    //   // this.setState({ newMessages: messages });\n    //   this.getConversation();\n    //   this.seenMessage();\n    // });\n\n    // socket.on(\"online\", (user) => {\n    //   console.log(\"online\");\n    // });\n  }\n\n  scrollToBottom() {\n    this.el.scrollIntoView({ behavior: \"smooth\" });\n  }\n\n  seenMessage = () => {\n    const { conversationId } = this.props.match.params;\n\n    conversationService\n      .messageSeen(conversationId)\n      .then((apiResponse) => {})\n      .catch((err) => console.log(err));\n  };\n\n  getConversation = () => {\n    const { conversationId } = this.props.match.params;\n    conversationService\n      .getConversationOne(conversationId)\n      .then((apiResponse) => {\n        this.setState({ conversation: apiResponse.data });\n        this.getMessages();\n        this.filterCurrentUser(); //maybe don't need\n\n        // this.seenMessage();\n      });\n  };\n\n  getConversationMount = () => {\n    const { conversationId } = this.props.match.params;\n    conversationService\n      .getConversationOne(conversationId)\n      .then((apiResponse) => {\n        this.setState({ conversation: apiResponse.data });\n        this.getMessages();\n        this.filterCurrentUser();\n        this.startSocket();\n      });\n  };\n\n  sendMessage = () => {\n    const message = this.state.sendMessage;\n    const conversationId = this.state.conversation._id;\n    console.log(message);\n    const sendObj = { conversationId, message };\n    if (message) {\n      socket.emit(\"sendMessage\", sendObj, () => {\n        console.log(\"MessageSent\");\n        this.setState({ sendMessage: \"\" });\n      });\n    }\n  };\n\n  sendDelete = () => {\n    const conversationId = this.state.conversation._id;\n\n    const sendObj = { conversationId, message: \"\" };\n\n    socket.emit(\"sendMessage\", sendObj, () => {\n      console.log(\"MessageSent\");\n      this.setState({ sendMessage: \"\" });\n    });\n  };\n\n  getMessages = () => {\n    const messages = this.state.conversation.messages;\n    if (messages.length !== this.state.messages.length) {\n      this.setState({ messages });\n      this.scrollToBottom();\n    }\n  };\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { conversationId } = this.props.match.params;\n    const sendMessage = this.state.sendMessage;\n    const userContactId = this.state.userContact._id;\n    console.log(userContactId);\n    conversationService\n      .sendMessage(conversationId, sendMessage, userContactId)\n      .then((apiResponse) => {\n        // this.setState({ sendMessage: \"\" });\n        this.getConversation();\n        this.sendMessage();\n\n        // this.getConversation();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  filterCurrentUser = () => {\n    const userArr = this.state.conversation.users;\n    const filteredUserArr = userArr.filter((user) => {\n      if (user._id === this.props.user._id) {\n        return false;\n      } else {\n        return true;\n      }\n    });\n    this.setState({ userContact: filteredUserArr[0] });\n    return filteredUserArr[0];\n  };\n\n  isAdmin = (userId) => {\n    if (userId === this.props.user._id) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  setTimerFromApiCall = () => {\n    const intervalId = setInterval(() => {\n      this.getConversation();\n    }, 5000);\n    this.setState({ intervalId: intervalId });\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n    this.seenMessage(); // LookLater\n  }\n\n  outputDate = (dateString) => {\n    const date = new Date(dateString);\n    const day = date.toDateString().split(\" \").slice(0, 3).join(\" \");\n\n    const time = date.toLocaleString().split(\" \").reverse()[0].slice(0, 5);\n    return time + \" \" + day;\n  };\n\n  checkSeen = () => {\n    const notificationsArr = this.state.conversation.notifications;\n    const messagesArr = this.state.conversation.messages;\n    const lastMessage = this.state.conversation.messages.length - 1;\n\n    if (\n      notificationsArr.length === 0 &&\n      messagesArr.length !== 0 &&\n      messagesArr[lastMessage].userSent._id === this.props.user._id\n    ) {\n      return \"Seen\";\n    } else {\n      return null;\n    }\n  };\n\n  deleteMessage = (messageId) => {\n    const { conversationId } = this.props.match.params;\n    conversationService\n      .deleteMessage(conversationId, messageId)\n      .then((apiResponse) => {\n        this.getConversation();\n        this.sendDelete();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  toggleDelete = () => {\n    this.setState({ showDelete: !this.state.showDelete });\n  };\n\n  render() {\n    // if (this.state.conversation.users) {\n    //   user = this.filterCurrentUser(this.state.conversation.users);\n    // }\n    let classes = \"\";\n    if (this.state.showDelete) {\n      classes = \"slide-message\";\n    }\n\n    return (\n      <div className=\"conversation-details\">\n        <ThemeConversation dark={this.props.isDark} className=\"isMessages\">\n          <MessageHeader>\n            <img src={this.state.userContact.image} />\n            <h3>\n              {this.state.userContact.firstName}{\" \"}\n              {this.state.userContact.lastName}\n            </h3>\n          </MessageHeader>\n\n          {this.state.messages.map((message) => {\n            return (\n              <div key={message._id}>\n                {this.isAdmin(message.userSent._id) ? (\n                  <div>\n                    <div\n                      onClick={this.toggleDelete}\n                      className={`admin-message ${classes}`}\n                    >\n                      <div>{this.outputDate(message.created_at)}</div>\n                      <p>\n                        <p>\n                          {message.userSent.firstName}: {message.messageContent}{\" \"}\n                        </p>\n                      </p>\n                    </div>\n                    {this.state.showDelete ? (\n                      <button\n                        className=\"delete delete-message\"\n                        onClick={() => this.deleteMessage(message._id)}\n                      ></button>\n                    ) : null}\n                  </div>\n                ) : (\n                  <div className=\"user-message\">\n                    <div>{this.outputDate(message.created_at)}</div>\n\n                    <p>\n                      {message.userSent.firstName}: {message.messageContent}\n                    </p>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n          {/* <div>\n            {this.state.newMessages.map((message) => {\n              return <p>{message}</p>;\n            })}\n          </div> */}\n\n          <div className=\"seen\">\n            {this.state.conversation.notifications && this.checkSeen()}\n          </div>\n\n          <div\n            ref={(el) => {\n              this.el = el;\n            }}\n          ></div>\n          <form onSubmit={this.handleSubmit} className=\"send-message\">\n            <input\n              className=\"input is-info\"\n              value={this.state.sendMessage}\n              name=\"sendMessage\"\n              onChange={this.handleInput}\n              required\n            />\n            <button className=\"button\" type=\"submit\">\n              Send\n            </button>\n          </form>\n        </ThemeConversation>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(ConversationDetails);\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { withAuth } from './../context/auth-context';\n\n// Route that only allows access to a user who is not logged in\n\nfunction AnonRoute (routeProps) {\n  // Value coming from `AuthProvider` ( via `withAuth` )\n  const { isLoggedIn, isLoading } = routeProps;\n\n  // Values coming from the AnonRoute itself\n  const ComponentToShow = routeProps.component;\n  const { exact, path } = routeProps;\n\n  // If AuthProvider is still making request to check the user\n  if (isLoading) return 'Loading';\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={\n        function(props) {\n          if (isLoggedIn) return <Redirect to=\"/private\" />\n          else if (! isLoggedIn) return <ComponentToShow {...props} />\n        }\n      }\n     />\n    )\n}\n\n\nexport default withAuth(AnonRoute);\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom';\nimport { withAuth } from './../context/auth-context';\n\n// Route that forbids access to a user who is not logged in\n\nfunction PrivateRoute (routeProps) {\n  // Value coming from `AuthProvider` ( via `withAuth` )\n  const { isLoggedIn, isLoading } = routeProps;\n\n  // Values coming from the PrivateRoute itself\n  const ComponentToShow = routeProps.component;\n  const { exact, path } = routeProps;\n\n  // If AuthProvider is still making request to check the user\n  if (isLoading) return 'Loading';\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={\n        function(props) {\n          if (! isLoggedIn) return <Redirect to=\"/login\" />;\n          else if (isLoggedIn) return <ComponentToShow {...props} />;\n        }\n      }\n     />\n    )\n}\n\n\nexport default withAuth(PrivateRoute);\n\n\n/* \n// Concise way\nfunction PrivateRoute({ component: Component, isLoggedIn, ...rest }) {\n  return (\n   <Route\n    {...rest}\n    render={ (props)  => isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />}\n   /> \n)} \n*/\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Private from \"./pages/Private\";\nimport Search from \"./pages/Search\";\nimport Profile from \"./pages/Profile\";\nimport PostDetails from \"./pages/PostDetails\";\nimport ConversationList from \"./pages/ConversationList\";\nimport ConversationDetails from \"./pages/ConversationDetails\";\n\nimport AnonRoute from \"./components/AnonRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nclass App extends Component {\n  render() {\n    console.log(window.innerWidth < 1023);\n\n    return (\n      <div className=\"container\">\n        {window.innerWidth > 1023 ? <Navbar /> : null}\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n\n          <AnonRoute exact path=\"/signup\" component={Signup} />\n          <AnonRoute exact path=\"/login\" component={Login} />\n\n          <PrivateRoute exact path=\"/private\" component={Private} />\n          <PrivateRoute exact path=\"/search\" component={Search} />\n          <PrivateRoute exact path=\"/profile/:id\" component={Profile} />\n          <PrivateRoute\n            exact\n            path=\"/postdetails/:postId\"\n            component={PostDetails}\n          />\n          <PrivateRoute\n            exact\n            path=\"/conversations\"\n            component={ConversationList}\n          />\n          <PrivateRoute\n            exact\n            path=\"/conversation-details/:conversationId\"\n            component={ConversationDetails}\n          />\n        </Switch>\n        <div id=\"nav-space\"></div>\n\n        {window.innerWidth < 1023 ? <Navbar /> : null}\n        {/* <Navbar /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nimport { AuthProvider } from './context/auth-context';\n\nReactDOM.render(\n  <Router>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </Router>\n, document.getElementById('root'));\n"],"sourceRoot":""}